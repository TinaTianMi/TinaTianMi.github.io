(function(E){function e(e){for(var R,I,A=e[0],O=e[1],S=e[2],L=0,r=[];L<A.length;L++)I=A[L],Object.prototype.hasOwnProperty.call(N,I)&&N[I]&&r.push(N[I][0]),N[I]=0;for(R in O)Object.prototype.hasOwnProperty.call(O,R)&&(E[R]=O[R]);n&&n(e);while(r.length)r.shift()();return t.push.apply(t,S||[]),T()}function T(){for(var E,e=0;e<t.length;e++){for(var T=t[e],R=!0,A=1;A<T.length;A++){var O=T[A];0!==N[O]&&(R=!1)}R&&(t.splice(e--,1),E=I(I.s=T[0]))}return E}var R={},N={app:0},t=[];function I(e){if(R[e])return R[e].exports;var T=R[e]={i:e,l:!1,exports:{}};return E[e].call(T.exports,T,T.exports,I),T.l=!0,T.exports}I.m=E,I.c=R,I.d=function(E,e,T){I.o(E,e)||Object.defineProperty(E,e,{enumerable:!0,get:T})},I.r=function(E){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(E,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(E,"__esModule",{value:!0})},I.t=function(E,e){if(1&e&&(E=I(E)),8&e)return E;if(4&e&&"object"===typeof E&&E&&E.__esModule)return E;var T=Object.create(null);if(I.r(T),Object.defineProperty(T,"default",{enumerable:!0,value:E}),2&e&&"string"!=typeof E)for(var R in E)I.d(T,R,function(e){return E[e]}.bind(null,R));return T},I.n=function(E){var e=E&&E.__esModule?function(){return E["default"]}:function(){return E};return I.d(e,"a",e),e},I.o=function(E,e){return Object.prototype.hasOwnProperty.call(E,e)},I.p="/";var A=window["webpackJsonp"]=window["webpackJsonp"]||[],O=A.push.bind(A);A.push=e,A=A.slice();for(var S=0;S<A.length;S++)e(A[S]);var n=O;t.push([0,"chunk-vendors"]),T()})({0:function(E,e,T){E.exports=T("56d7")},"034f":function(E,e,T){"use strict";var R=T("85ec"),N=T.n(R);N.a},"2bff":function(E,e,T){"use strict";var R=T("78e3"),N=T.n(R);N.a},"56d7":function(E,e,T){"use strict";T.r(e);T("e260"),T("e6cf"),T("cca6"),T("a79d");var R,N,t,I,A,O=T("2b0e"),S=function(){var E=this,e=E.$createElement,T=E._self._c||e;return T("div",{attrs:{id:"app"}},[T("sql-formatter")],1)},n=[],L=function(){var E=this,e=E.$createElement;E._self._c;return E._m(0)},r=[function(){var E=this,e=E.$createElement,T=E._self._c||e;return T("div",{staticClass:"formatter"},[T("div",{staticClass:"header"},[T("div",{staticClass:"select-wrapper"},[E._v(" Format "),T("select",{attrs:{id:"language"}},[T("option",{attrs:{value:"hql"}},[E._v(" HQL ")]),T("option",{attrs:{value:"sql"}},[E._v(" SQL ")]),T("option",{attrs:{value:"n1ql"}},[E._v(" N1QL ")]),T("option",{attrs:{value:"db2"}},[E._v(" DB2 ")]),T("option",{attrs:{value:"pl/sql"}},[E._v(" PL/SQL ")])])])]),T("div",{staticClass:"main"},[T("section",{staticClass:"input"},[T("textarea",{attrs:{id:"input",autofocus:"true",wrap:"off"}},[E._v(" select supplier_name, city from suppliers where supplier_id > 500 ${ass} ORDER BY supplier_name ASC, city DESC; ")])]),T("section",{staticClass:"output"},[T("textarea",{attrs:{id:"output",readonly:"true",wrap:"off"}})])])])}],C=T("d4ec"),i=T("bee2"),a=(T("5319"),T("498a"),T("159b"),T("8a30")),o=T.n(a),s=T("f942"),D=T.n(s),U={WHITESPACE:"whitespace",WORD:"word",STRING:"string",RESERVED:"reserved",RESERVED_TOPLEVEL:"reserved-toplevel",RESERVED_NEWLINE:"reserved-newline",OPERATOR:"operator",OPEN_PAREN:"open-paren",CLOSE_PAREN:"close-paren",LINE_COMMENT:"line-comment",BLOCK_COMMENT:"block-comment",NUMBER:"number",PLACEHOLDER:"placeholder"},P=T("8448"),u=T.n(P),l=T("4416"),M=T.n(l),c="top-level",_="block-level",h=function(){function E(e){Object(C["a"])(this,E),this.indent=e||"  ",this.indentTypes=[]}return Object(i["a"])(E,[{key:"getIndent",value:function(){return u()(this.indent,this.indentTypes.length)}},{key:"increaseToplevel",value:function(){this.indentTypes.push(c)}},{key:"increaseBlockLevel",value:function(){this.indentTypes.push(_)}},{key:"decreaseTopLevel",value:function(){M()(this.indentTypes)===c&&this.indentTypes.pop()}},{key:"decreaseBlockLevel",value:function(){while(this.indentTypes.length>0){var E=this.indentTypes.pop();if(E!==c)break}}}]),E}(),d=50,p=function(){function E(){Object(C["a"])(this,E),this.level=0}return Object(i["a"])(E,[{key:"beginIfPossible",value:function(E,e){0===this.level&&this.isInlineBlock(E,e)?this.level=1:this.level>0?this.level++:this.level=0}},{key:"end",value:function(){this.level--}},{key:"isActive",value:function(){return this.level>0}},{key:"isInlineBlock",value:function(E,e){for(var T=0,R=0,N=e;N<E.length;N++){var t=E[N];if(T+=t.value.length,T>d)return!1;if(t.type===U.OPEN_PAREN)R++;else if(t.type===U.CLOSE_PAREN&&(R--,0===R))return!0;if(this.isForbiddenToken(t))return!1}return!1}},{key:"isForbiddenToken",value:function(E){var e=E.type,T=E.value;return e===U.RESERVED_TOPLEVEL||e===U.RESERVED_NEWLINE||e===U.COMMENT||e===U.BLOCK_COMMENT||";"===T}}]),E}(),G=function(){function E(e){Object(C["a"])(this,E),this.params=e,this.index=0}return Object(i["a"])(E,[{key:"get",value:function(E){var e=E.key,T=E.value;return this.params?e?this.params[e]:this.params[this.index++]:T}}]),E}(),f=function(){function E(e,T){Object(C["a"])(this,E),this.cfg=e||{},this.indentation=new h(this.cfg.indent),this.inlineBlock=new p,this.params=new G(this.cfg.params),this.tokenizer=T,this.previousReservedWord={},this.tokens=[],this.index=0}return Object(i["a"])(E,[{key:"format",value:function(E){this.tokens=this.tokenizer.tokenize(E);var e=this.getFormattedQueryFromTokens();return e.trim()}},{key:"getFormattedQueryFromTokens",value:function(){var E=this,e="";return this.tokens.forEach((function(T,R){E.index=R,T.type===U.WHITESPACE||(T.type===U.LINE_COMMENT?e=E.formatLineComment(T,e):T.type===U.BLOCK_COMMENT?e=E.formatBlockComment(T,e):T.type===U.RESERVED_TOPLEVEL?(e=E.formatToplevelReservedWord(T,e),E.previousReservedWord=T):T.type===U.RESERVED_NEWLINE?(e=E.formatNewlineReservedWord(T,e),E.previousReservedWord=T):T.type===U.RESERVED?(e=E.formatWithSpaces(T,e),E.previousReservedWord=T):e=T.type===U.OPEN_PAREN?E.formatOpeningParentheses(T,e):T.type===U.CLOSE_PAREN?E.formatClosingParentheses(T,e):T.type===U.PLACEHOLDER?E.formatPlaceholder(T,e):","===T.value?E.formatComma(T,e):":"===T.value?E.formatWithSpaceAfter(T,e):"."===T.value?E.formatWithoutSpaces(T,e):";"===T.value?E.formatQuerySeparator(T,e):E.formatWithSpaces(T,e))})),e}},{key:"formatLineComment",value:function(E,e){return this.addNewline(e+E.value)}},{key:"formatBlockComment",value:function(E,e){return this.addNewline(this.addNewline(e)+this.indentComment(E.value))}},{key:"indentComment",value:function(E){return E.replace(/\n/g,"\n"+this.indentation.getIndent())}},{key:"formatToplevelReservedWord",value:function(E,e){return this.indentation.decreaseTopLevel(),e=this.addNewline(e),this.indentation.increaseToplevel(),e+=this.equalizeWhitespace(E.value),this.addNewline(e)}},{key:"formatNewlineReservedWord",value:function(E,e){return this.addNewline(e)+this.equalizeWhitespace(E.value)+" "}},{key:"equalizeWhitespace",value:function(E){return E.replace(/\s+/g," ")}},{key:"formatOpeningParentheses",value:function(E,e){var T=[U.WHITESPACE,U.OPEN_PAREN,U.LINE_COMMENT];return o()(T,this.previousToken().type)||(e=D()(e)),"hql"===this.cfg.language&&"CASE"===E.value.toLocaleUpperCase()?e=this.formatNewlineReservedWord(E,e):e+=E.value,this.inlineBlock.beginIfPossible(this.tokens,this.index),this.inlineBlock.isActive()||(this.indentation.increaseBlockLevel(),e=this.addNewline(e)),e}},{key:"formatClosingParentheses",value:function(E,e){return this.inlineBlock.isActive()?(this.inlineBlock.end(),this.formatWithSpaceAfter(E,e)):(this.indentation.decreaseBlockLevel(),this.formatWithSpaces(E,this.addNewline(e)))}},{key:"formatPlaceholder",value:function(E,e){return e+this.params.get(E)+" "}},{key:"formatComma",value:function(E,e){return e=this.trimTrailingWhitespace(e)+E.value+" ",this.inlineBlock.isActive()?e:/^LIMIT$/i.test(this.previousReservedWord.value)?e:this.addNewline(e)}},{key:"formatWithSpaceAfter",value:function(E,e){return this.trimTrailingWhitespace(e)+E.value+" "}},{key:"formatWithoutSpaces",value:function(E,e){return this.trimTrailingWhitespace(e)+E.value}},{key:"formatWithSpaces",value:function(E,e){return e+E.value+" "}},{key:"formatQuerySeparator",value:function(E,e){return this.trimTrailingWhitespace(e)+E.value+"\n"}},{key:"addNewline",value:function(E){return D()(E)+"\n"+this.indentation.getIndent()}},{key:"trimTrailingWhitespace",value:function(E){return this.previousNonWhitespaceToken().type===U.LINE_COMMENT?D()(E)+"\n":D()(E)}},{key:"previousNonWhitespaceToken",value:function(){var E=1;while(this.previousToken(E).type===U.WHITESPACE)E++;return this.previousToken(E)}},{key:"previousToken",value:function(){var E=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return this.tokens[this.index-E]||{}}}]),E}(),v=(T("99af"),T("a15b"),T("d81d"),T("fb6a"),T("4d63"),T("25f0"),T("466d"),T("13ea")),H=T.n(v),F=T("9062"),B=T.n(F),W=function(){function E(e){Object(C["a"])(this,E),this.WHITESPACE_REGEX=/^(\s+)/,this.NUMBER_REGEX=/^((-\s*)?[0-9]+(\.[0-9]+)?([Ee][+-]?[\d]+)?|0x[0-9a-fA-F]+|0b[01]+)\b/,this.OPERATOR_REGEX=/^(!=|<>|==|<=|>=|!<|!>|\|\||::|->>|->|~~\*|~~|!~~\*|!~~|~\*|!~\*|!~|.)/,this.BLOCK_COMMENT_REGEX=/^(\/\*[^]*?(?:\*\/|$))/,this.LINE_COMMENT_REGEX=this.createLineCommentRegex(e.lineCommentTypes),this.RESERVED_TOPLEVEL_REGEX=this.createReservedWordRegex(e.reservedToplevelWords),this.RESERVED_NEWLINE_REGEX=this.createReservedWordRegex(e.reservedNewlineWords),this.RESERVED_PLAIN_REGEX=this.createReservedWordRegex(e.reservedWords),this.WORD_REGEX=this.createWordRegex(e.specialWordChars),this.STRING_REGEX=this.createStringRegex(e.stringTypes),this.OPEN_PAREN_REGEX=this.createParenRegex(e.openParens),this.CLOSE_PAREN_REGEX=this.createParenRegex(e.closeParens),this.INDEXED_PLACEHOLDER_REGEX=this.createPlaceholderRegex(e.indexedPlaceholderTypes,"[0-9]*"),this.IDENT_NAMED_PLACEHOLDER_REGEX=this.createPlaceholderRegex(e.namedPlaceholderTypes,"[a-zA-Z0-9._$]+"),this.STRING_NAMED_PLACEHOLDER_REGEX=this.createPlaceholderRegex(e.namedPlaceholderTypes,this.createStringPattern(e.stringTypes))}return Object(i["a"])(E,[{key:"createLineCommentRegex",value:function(E){return new RegExp("^((?:".concat(E.map((function(E){return B()(E)})).join("|"),").*?(?:\n|$))"))}},{key:"createReservedWordRegex",value:function(E){var e=E.join("|").replace(/ /g,"\\s+");return new RegExp("^(".concat(e,")\\b"),"i")}},{key:"createWordRegex",value:function(){var E=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return new RegExp("^([\\w".concat(E.join(""),"]+)"))}},{key:"createStringRegex",value:function(E){return new RegExp("^("+this.createStringPattern(E)+")")}},{key:"createStringPattern",value:function(E){var e={"``":"((`[^`]*($|`))+)","[]":"((\\[[^\\]]*($|\\]))(\\][^\\]]*($|\\]))*)",'""':'(("[^"\\\\]*(?:\\\\.[^"\\\\]*)*("|$))+)',"''":"(('[^'\\\\]*(?:\\\\.[^'\\\\]*)*('|$))+)","N''":"((N'[^N'\\\\]*(?:\\\\.[^N'\\\\]*)*('|$))+)"};return E.map((function(E){return e[E]})).join("|")}},{key:"createParenRegex",value:function(E){var e=this;return new RegExp("^("+E.map((function(E){return e.escapeParen(E)})).join("|")+")","i")}},{key:"escapeParen",value:function(E){return 1===E.length?B()(E):"\\b"+E+"\\b"}},{key:"createPlaceholderRegex",value:function(E,e){if(H()(E))return!1;var T=E.map(B.a).join("|");return new RegExp("^((?:".concat(T,")(?:").concat(e,"))"))}},{key:"tokenize",value:function(E){var e,T=[];while(E.length)e=this.getNextToken(E,e),E=E.substring(e.value.length),T.push(e);return T}},{key:"getNextToken",value:function(E,e){return this.getWhitespaceToken(E)||this.getCommentToken(E)||this.getStringToken(E)||this.getOpenParenToken(E)||this.getCloseParenToken(E)||this.getPlaceholderToken(E)||this.getNumberToken(E)||this.getReservedWordToken(E,e)||this.getWordToken(E)||this.getOperatorToken(E)}},{key:"getWhitespaceToken",value:function(E){return this.getTokenOnFirstMatch({input:E,type:U.WHITESPACE,regex:this.WHITESPACE_REGEX})}},{key:"getCommentToken",value:function(E){return this.getLineCommentToken(E)||this.getBlockCommentToken(E)}},{key:"getLineCommentToken",value:function(E){return this.getTokenOnFirstMatch({input:E,type:U.LINE_COMMENT,regex:this.LINE_COMMENT_REGEX})}},{key:"getBlockCommentToken",value:function(E){return this.getTokenOnFirstMatch({input:E,type:U.BLOCK_COMMENT,regex:this.BLOCK_COMMENT_REGEX})}},{key:"getStringToken",value:function(E){return this.getTokenOnFirstMatch({input:E,type:U.STRING,regex:this.STRING_REGEX})}},{key:"getOpenParenToken",value:function(E){return this.getTokenOnFirstMatch({input:E.toLocaleUpperCase(),type:U.OPEN_PAREN,regex:this.OPEN_PAREN_REGEX})}},{key:"getCloseParenToken",value:function(E){return this.getTokenOnFirstMatch({input:E.toLocaleUpperCase(),type:U.CLOSE_PAREN,regex:this.CLOSE_PAREN_REGEX})}},{key:"getPlaceholderToken",value:function(E){return this.getIdentNamedPlaceholderToken(E)||this.getStringNamedPlaceholderToken(E)||this.getIndexedPlaceholderToken(E)}},{key:"getIdentNamedPlaceholderToken",value:function(E){return this.getPlaceholderTokenWithKey({input:E,regex:this.IDENT_NAMED_PLACEHOLDER_REGEX,parseKey:function(E){return E.slice(1)}})}},{key:"getStringNamedPlaceholderToken",value:function(E){var e=this;return this.getPlaceholderTokenWithKey({input:E,regex:this.STRING_NAMED_PLACEHOLDER_REGEX,parseKey:function(E){return e.getEscapedPlaceholderKey({key:E.slice(2,-1),quoteChar:E.slice(-1)})}})}},{key:"getIndexedPlaceholderToken",value:function(E){return this.getPlaceholderTokenWithKey({input:E,regex:this.INDEXED_PLACEHOLDER_REGEX,parseKey:function(E){return E.slice(1)}})}},{key:"getPlaceholderTokenWithKey",value:function(E){var e=E.input,T=E.regex,R=E.parseKey,N=this.getTokenOnFirstMatch({input:e,regex:T,type:U.PLACEHOLDER});return N&&(N.key=R(N.value)),N}},{key:"getEscapedPlaceholderKey",value:function(E){var e=E.key,T=E.quoteChar;return e.replace(new RegExp(B()("\\")+T,"g"),T)}},{key:"getNumberToken",value:function(E){return this.getTokenOnFirstMatch({input:E,type:U.NUMBER,regex:this.NUMBER_REGEX})}},{key:"getOperatorToken",value:function(E){return this.getTokenOnFirstMatch({input:E,type:U.OPERATOR,regex:this.OPERATOR_REGEX})}},{key:"getReservedWordToken",value:function(E,e){if(!e||!e.value||"."!==e.value)return this.getToplevelReservedToken(E)||this.getNewlineReservedToken(E)||this.getPlainReservedToken(E)}},{key:"getToplevelReservedToken",value:function(E){return this.getTokenOnFirstMatch({input:E.toLocaleUpperCase(),type:U.RESERVED_TOPLEVEL,regex:this.RESERVED_TOPLEVEL_REGEX})}},{key:"getNewlineReservedToken",value:function(E){return this.getTokenOnFirstMatch({input:E.toLocaleUpperCase(),type:U.RESERVED_NEWLINE,regex:this.RESERVED_NEWLINE_REGEX})}},{key:"getPlainReservedToken",value:function(E){return this.getTokenOnFirstMatch({input:E.toLocaleUpperCase(),type:U.RESERVED,regex:this.RESERVED_PLAIN_REGEX})}},{key:"getWordToken",value:function(E){return this.getTokenOnFirstMatch({input:E,type:U.WORD,regex:this.WORD_REGEX})}},{key:"getTokenOnFirstMatch",value:function(E){var e=E.input,T=E.type,R=E.regex,N=e.match(R);if(N)return{type:T,value:N[1]}}}]),E}(),g=["ABS","ACTIVATE","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","ANY","ARE","ARRAY","AS","ASC","ASENSITIVE","ASSOCIATE","ASUTIME","ASYMMETRIC","AT","ATOMIC","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","AVG","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BLOB","BOOLEAN","BOTH","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CCSID","CEIL","CEILING","CHAR","CHARACTER","CHARACTER_LENGTH","CHAR_LENGTH","CHECK","CLOB","CLONE","CLOSE","CLUSTER","COALESCE","COLLATE","COLLECT","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","CONVERT","CORR","CORRESPONDING","COUNT","COUNT_BIG","COVAR_POP","COVAR_SAMP","CREATE","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DATE","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DEREF","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DOUBLE","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELEMENT","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPTION","EXCLUDING","EXCLUSIVE","EXEC","EXECUTE","EXISTS","EXIT","EXP","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FILTER","FINAL","FIRST","FLOAT","FLOOR","FOR","FOREIGN","FREE","FULL","FUNCTION","FUSION","GENERAL","GENERATED","GET","GLOBAL","GOTO","GRANT","GRAPHIC","GROUP","GROUPING","HANDLER","HASH","HASHED_VALUE","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INT","INTEGER","INTEGRITY","INTERSECTION","INTERVAL","INTO","IS","ISOBID","ISOLATION","ITERATE","JAR","JAVA","KEEP","KEY","LABEL","LANGUAGE","LARGE","LATERAL","LC_CTYPE","LEADING","LEAVE","LEFT","LIKE","LINKTYPE","LN","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LONG","LOOP","LOWER","MAINTAINED","MATCH","MATERIALIZED","MAX","MAXVALUE","MEMBER","MERGE","METHOD","MICROSECOND","MICROSECONDS","MIN","MINUTE","MINUTES","MINVALUE","MOD","MODE","MODIFIES","MODULE","MONTH","MONTHS","MULTISET","NAN","NATIONAL","NATURAL","NCHAR","NCLOB","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZE","NORMALIZED","NOT","NULL","NULLIF","NULLS","NUMERIC","NUMPARTS","OBID","OCTET_LENGTH","OF","OFFSET","OLD","OLD_TABLE","ON","ONLY","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","ORDER","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","PIECESIZE","PLAN","POSITION","POWER","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","REAL","RECOVERY","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCOPE","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SIGNAL","SIMILAR","SIMPLE","SMALLINT","SNAN","SOME","SOURCE","SPECIFIC","SPECIFICTYPE","SQL","SQLEXCEPTION","SQLID","SQLSTATE","SQLWARNING","SQRT","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STDDEV_POP","STDDEV_SAMP","STOGROUP","STORES","STYLE","SUBMULTISET","SUBSTRING","SUM","SUMMARY","SYMMETRIC","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","TABLESPACE","THEN","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSACTION","TRANSLATE","TRANSLATION","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TYPE","UESCAPE","UNDO","UNIQUE","UNKNOWN","UNNEST","UNTIL","UPPER","USAGE","USER","USING","VALIDPROC","VALUE","VARCHAR","VARIABLE","VARIANT","VARYING","VAR_POP","VAR_SAMP","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHILE","WIDTH_BUCKET","WINDOW","WITH","WITHIN","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],y=["ADD","AFTER","ALTER COLUMN","ALTER TABLE","DELETE FROM","EXCEPT","FETCH FIRST","FROM","GROUP BY","GO","HAVING","INSERT INTO","INTERSECT","LIMIT","ORDER BY","SELECT","SET CURRENT SCHEMA","SET SCHEMA","SET","UNION ALL","UPDATE","VALUES","WHERE"],k=["AND","CROSS JOIN","INNER JOIN","JOIN","LEFT JOIN","LEFT OUTER JOIN","OR","OUTER JOIN","RIGHT JOIN","RIGHT OUTER JOIN"],Y=function(){function E(e){Object(C["a"])(this,E),this.cfg=e}return Object(i["a"])(E,[{key:"format",value:function(E){return R||(R=new W({reservedWords:g,reservedToplevelWords:y,reservedNewlineWords:k,stringTypes:['""',"''","``","[]"],openParens:["("],closeParens:[")"],indexedPlaceholderTypes:["?"],namedPlaceholderTypes:[":"],lineCommentTypes:["--"],specialWordChars:["#","@"]})),new f(this.cfg,R).format(E)}}]),E}(),m=["ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","CONNECT","CONTINUE","CORRELATE","COVER","CREATE","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FIRST","FLATTEN","FOR","FORCE","FROM","FUNCTION","GRANT","GROUP","GSI","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LAST","LEFT","LET","LETTING","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NOT","NULL","NUMBER","OBJECT","OFFSET","ON","OPTION","OR","ORDER","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROCEDURE","PUBLIC","RAW","REALM","REDUCE","RENAME","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","SATISFIES","SCHEMA","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TO","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WITH","WITHIN","WORK","XOR"],V=["DELETE FROM","EXCEPT ALL","EXCEPT","EXPLAIN DELETE FROM","EXPLAIN UPDATE","EXPLAIN UPSERT","FROM","GROUP BY","HAVING","INFER","INSERT INTO","INTERSECT ALL","INTERSECT","LET","LIMIT","MERGE","NEST","ORDER BY","PREPARE","SELECT","SET CURRENT SCHEMA","SET SCHEMA","SET","UNION ALL","UNION","UNNEST","UPDATE","UPSERT","USE KEYS","VALUES","WHERE"],X=["AND","INNER JOIN","JOIN","LEFT JOIN","LEFT OUTER JOIN","OR","OUTER JOIN","RIGHT JOIN","RIGHT OUTER JOIN","XOR"],K=function(){function E(e){Object(C["a"])(this,E),this.cfg=e}return Object(i["a"])(E,[{key:"format",value:function(E){return N||(N=new W({reservedWords:m,reservedToplevelWords:V,reservedNewlineWords:X,stringTypes:['""',"''","``"],openParens:["(","[","{"],closeParens:[")","]","}"],namedPlaceholderTypes:["$"],lineCommentTypes:["#","--"]})),new f(this.cfg,N).format(E)}}]),E}(),Q=["A","ACCESSIBLE","AGENT","AGGREGATE","ALL","ALTER","ANY","ARRAY","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BETWEEN","BFILE_BASE","BINARY_INTEGER","BINARY","BLOB_BASE","BLOCK","BODY","BOOLEAN","BOTH","BOUND","BULK","BY","BYTE","C","CALL","CALLING","CASCADE","CASE","CHAR_BASE","CHAR","CHARACTER","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOB_BASE","CLONE","CLOSE","CLUSTER","CLUSTERS","COALESCE","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONTINUE","CONVERT","COUNT","CRASH","CREATE","CREDENTIAL","CURRENT","CURRVAL","CURSOR","CUSTOMDATUM","DANGLING","DATA","DATE_BASE","DATE","DAY","DECIMAL","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DIRECTORY","DISTINCT","DO","DOUBLE","DROP","DURATION","ELEMENT","ELSIF","EMPTY","ESCAPE","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTENDS","EXTERNAL","EXTRACT","FALSE","FETCH","FINAL","FIRST","FIXED","FLOAT","FOR","FORALL","FORCE","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSTANTIABLE","INT","INTEGER","INTERFACE","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMITED","LOCAL","LOCK","LONG","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MLSLABEL","MOD","MODE","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NATURAL","NATURALN","NCHAR","NEW","NEXTVAL","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","NULLIF","NUMBER_BASE","NUMBER","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","OLD","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","ORACLE","ORADATA","ORDER","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERLAPS","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARENT","PARTITION","PASCAL","PCTFREE","PIPE","PIPELINED","PLS_INTEGER","PLUGGABLE","POSITIVE","POSITIVEN","PRAGMA","PRECISION","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","RAW","READ","REAL","RECORD","REF","REFERENCE","RELEASE","RELIES_ON","REM","REMAINDER","RENAME","RESOURCE","RESULT_CACHE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","ROWID","ROWNUM","ROWTYPE","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SHARE","SHORT","SIZE_T","SIZE","SMALLINT","SOME","SPACE","SPARSE","SQL","SQLCODE","SQLDATA","SQLERRM","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUCCESSFUL","SUM","SYNONYM","SYSDATE","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMESTAMP","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSACTION","TRANSACTIONAL","TRIGGER","TRUE","TRUSTED","TYPE","UB1","UB2","UB4","UID","UNDER","UNIQUE","UNPLUG","UNSIGNED","UNTRUSTED","USE","USER","USING","VALIDATE","VALIST","VALUE","VARCHAR","VARCHAR2","VARIABLE","VARIANCE","VARRAY","VARYING","VIEW","VIEWS","VOID","WHENEVER","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],w=["ADD","ALTER COLUMN","ALTER TABLE","BEGIN","CONNECT BY","DECLARE","DELETE FROM","DELETE","END","EXCEPT","EXCEPTION","FETCH FIRST","FROM","GROUP BY","HAVING","INSERT INTO","INSERT","INTERSECT","LIMIT","LOOP","MODIFY","ORDER BY","SELECT","SET CURRENT SCHEMA","SET SCHEMA","SET","START WITH","UNION ALL","UNION","UPDATE","VALUES","WHERE"],x=["AND","CROSS APPLY","CROSS JOIN","ELSE","END","INNER JOIN","JOIN","LEFT JOIN","LEFT OUTER JOIN","OR","OUTER APPLY","OUTER JOIN","RIGHT JOIN","RIGHT OUTER JOIN","WHEN","XOR"],b=function(){function E(e){Object(C["a"])(this,E),this.cfg=e}return Object(i["a"])(E,[{key:"format",value:function(E){return t||(t=new W({reservedWords:Q,reservedToplevelWords:w,reservedNewlineWords:x,stringTypes:['""',"N''","''","``"],openParens:["(","CASE"],closeParens:[")","END"],indexedPlaceholderTypes:["?"],namedPlaceholderTypes:[":"],lineCommentTypes:["--"],specialWordChars:["_","$","#",".","@"]})),new f(this.cfg,t).format(E)}}]),E}(),J=["ACCESSIBLE","ACTION","AGAINST","AGGREGATE","ALGORITHM","ALL","ALTER","ANALYSE","ANALYZE","AS","ASC","AUTOCOMMIT","AUTO_INCREMENT","BACKUP","BEGIN","BETWEEN","BINLOG","BOTH","CASCADE","CASE","CHANGE","CHANGED","CHARACTER SET","CHARSET","CHECK","CHECKSUM","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPRESSED","CONCURRENT","CONSTRAINT","CONTAINS","CONVERT","CREATE","CROSS","CURRENT_TIMESTAMP","DATABASE","DATABASES","DAY","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DEFAULT","DEFINER","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO","DROP","DUMPFILE","DUPLICATE","DYNAMIC","ELSE","ENCLOSED","END","ENGINE","ENGINES","ENGINE_TYPE","ESCAPE","ESCAPED","EVENTS","EXEC","EXECUTE","EXISTS","EXPLAIN","EXTENDED","FAST","FETCH","FIELDS","FILE","FIRST","FIXED","FLUSH","FOR","FORCE","FOREIGN","FULL","FULLTEXT","FUNCTION","GLOBAL","GRANT","GRANTS","GROUP_CONCAT","HEAP","HIGH_PRIORITY","HOSTS","HOUR","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IFNULL","IGNORE","IN","INDEX","INDEXES","INFILE","INSERT","INSERT_ID","INSERT_METHOD","INTERVAL","INTO","INVOKER","IS","ISOLATION","KEY","KEYS","KILL","LAST_INSERT_ID","LEADING","LEVEL","LIKE","LINEAR","LINES","LOAD","LOCAL","LOCK","LOCKS","LOGS","LOW_PRIORITY","MARIA","MASTER","MASTER_CONNECT_RETRY","MASTER_HOST","MASTER_LOG_FILE","MATCH","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MEDIUM","MERGE","MINUTE","MINUTE_SECOND","MIN_ROWS","MODE","MODIFY","MONTH","MRG_MYISAM","MYISAM","NAMES","NATURAL","NOT","NOW()","NULL","OFFSET","ON DELETE","ON UPDATE","ON","ONLY","OPEN","OPTIMIZE","OPTION","OPTIONALLY","OUTFILE","PACK_KEYS","PAGE","PARTIAL","PARTITION","PARTITIONS","PASSWORD","PRIMARY","PRIVILEGES","PROCEDURE","PROCESS","PROCESSLIST","PURGE","QUICK","RAID0","RAID_CHUNKS","RAID_CHUNKSIZE","RAID_TYPE","RANGE","READ","READ_ONLY","READ_WRITE","REFERENCES","REGEXP","RELOAD","RENAME","REPAIR","REPEATABLE","REPLACE","REPLICATION","RESET","RESTORE","RESTRICT","RETURN","RETURNS","REVOKE","RLIKE","ROLLBACK","ROW","ROWS","ROW_FORMAT","SECOND","SECURITY","SEPARATOR","SERIALIZABLE","SESSION","SHARE","SHOW","SHUTDOWN","SLAVE","SONAME","SOUNDS","SQL","SQL_AUTO_IS_NULL","SQL_BIG_RESULT","SQL_BIG_SELECTS","SQL_BIG_TABLES","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQL_LOG_BIN","SQL_LOG_OFF","SQL_LOG_UPDATE","SQL_LOW_PRIORITY_UPDATES","SQL_MAX_JOIN_SIZE","SQL_NO_CACHE","SQL_QUOTE_SHOW_CREATE","SQL_SAFE_UPDATES","SQL_SELECT_LIMIT","SQL_SLAVE_SKIP_COUNTER","SQL_SMALL_RESULT","SQL_WARNINGS","START","STARTING","STATUS","STOP","STORAGE","STRAIGHT_JOIN","STRING","STRIPED","SUPER","TABLE","TABLES","TEMPORARY","TERMINATED","THEN","TO","TRAILING","TRANSACTIONAL","TRUE","TRUNCATE","TYPE","TYPES","UNCOMMITTED","UNIQUE","UNLOCK","UNSIGNED","USAGE","USE","USING","VARIABLES","VIEW","WHEN","WITH","WORK","WRITE","YEAR_MONTH","SET","OR","INSERT OVERWRITE","INSERT"],j=["ADD","AFTER","ALTER COLUMN","ALTER TABLE","DELETE FROM","EXCEPT","FETCH FIRST","FROM","GROUP BY","GO","HAVING","INSERT INTO","INSERT","INTERSECT","LIMIT","MODIFY","ORDER BY","SELECT","SET CURRENT SCHEMA","SET SCHEMA","UNION ALL","UNION","UPDATE","VALUES","WHERE"],Z=["AND","CROSS APPLY","CROSS JOIN","ELSE","INNER JOIN","JOIN","LEFT JOIN","LEFT OUTER JOIN","OUTER APPLY","OUTER JOIN","RIGHT JOIN","RIGHT OUTER JOIN","WHEN","XOR","PARTITIONED"],$=function(){function E(e){Object(C["a"])(this,E),this.cfg=e}return Object(i["a"])(E,[{key:"format",value:function(E){return I||(I=new W({reservedWords:J,reservedToplevelWords:j,reservedNewlineWords:Z,stringTypes:['""',"N''","''","``","[]"],openParens:["(","{","CASE"],closeParens:[")","}","END"],indexedPlaceholderTypes:["?"],namedPlaceholderTypes:["@",":","$"],lineCommentTypes:["#","--"],specialWordChars:["#","@"]})),new f(this.cfg,I).format(E)}}]),E}(),q=["ACCESSIBLE","ACTION","AGAINST","AGGREGATE","ALGORITHM","ALL","ALTER","ANALYSE","ANALYZE","AS","ASC","AUTOCOMMIT","AUTO_INCREMENT","BACKUP","BEGIN","BETWEEN","BINLOG","BOTH","CASCADE","CASE","CHANGE","CHANGED","CHARACTER SET","CHARSET","CHECK","CHECKSUM","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPRESSED","CONCURRENT","CONSTRAINT","CONTAINS","CONVERT","CREATE","CROSS","CURRENT_TIMESTAMP","DATABASE","DATABASES","DAY","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DEFAULT","DEFINER","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO","DROP","DUMPFILE","DUPLICATE","DYNAMIC","ELSE","ENCLOSED","END","ENGINE","ENGINES","ENGINE_TYPE","ESCAPE","ESCAPED","EVENTS","EXEC","EXECUTE","EXISTS","EXPLAIN","EXTENDED","FAST","FETCH","FIELDS","FILE","FIRST","FIXED","FLUSH","FOR","FORCE","FOREIGN","FULL","FULLTEXT","FUNCTION","GLOBAL","GRANT","GRANTS","GROUP_CONCAT","HEAP","HIGH_PRIORITY","HOSTS","HOUR","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IFNULL","IGNORE","IN","INDEX","INDEXES","INFILE","INSERT","INSERT_ID","INSERT_METHOD","INTERVAL","INTO","INVOKER","IS","ISOLATION","KEY","KEYS","KILL","LAST_INSERT_ID","LEADING","LEVEL","LIKE","LINEAR","LINES","LOAD","LOCAL","LOCK","LOCKS","LOGS","LOW_PRIORITY","MARIA","MASTER","MASTER_CONNECT_RETRY","MASTER_HOST","MASTER_LOG_FILE","MATCH","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MEDIUM","MERGE","MINUTE","MINUTE_SECOND","MIN_ROWS","MODE","MODIFY","MONTH","MRG_MYISAM","MYISAM","NAMES","NATURAL","NOT","NOW()","NULL","OFFSET","ON DELETE","ON UPDATE","ON","ONLY","OPEN","OPTIMIZE","OPTION","OPTIONALLY","OUTFILE","PACK_KEYS","PAGE","PARTIAL","PARTITION","PARTITIONS","PASSWORD","PRIMARY","PRIVILEGES","PROCEDURE","PROCESS","PROCESSLIST","PURGE","QUICK","RAID0","RAID_CHUNKS","RAID_CHUNKSIZE","RAID_TYPE","RANGE","READ","READ_ONLY","READ_WRITE","REFERENCES","REGEXP","RELOAD","RENAME","REPAIR","REPEATABLE","REPLACE","REPLICATION","RESET","RESTORE","RESTRICT","RETURN","RETURNS","REVOKE","RLIKE","ROLLBACK","ROW","ROWS","ROW_FORMAT","SECOND","SECURITY","SEPARATOR","SERIALIZABLE","SESSION","SHARE","SHOW","SHUTDOWN","SLAVE","SONAME","SOUNDS","SQL","SQL_AUTO_IS_NULL","SQL_BIG_RESULT","SQL_BIG_SELECTS","SQL_BIG_TABLES","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQL_LOG_BIN","SQL_LOG_OFF","SQL_LOG_UPDATE","SQL_LOW_PRIORITY_UPDATES","SQL_MAX_JOIN_SIZE","SQL_NO_CACHE","SQL_QUOTE_SHOW_CREATE","SQL_SAFE_UPDATES","SQL_SELECT_LIMIT","SQL_SLAVE_SKIP_COUNTER","SQL_SMALL_RESULT","SQL_WARNINGS","START","STARTING","STATUS","STOP","STORAGE","STRAIGHT_JOIN","STRING","STRIPED","SUPER","TABLE","TABLES","TEMPORARY","TERMINATED","THEN","TO","TRAILING","TRANSACTIONAL","TRUE","TRUNCATE","TYPE","TYPES","UNCOMMITTED","UNIQUE","UNLOCK","UNSIGNED","USAGE","USE","USING","VARIABLES","VIEW","WHEN","WITH","WORK","WRITE","YEAR_MONTH"],z=["ADD","AFTER","ALTER COLUMN","ALTER TABLE","DELETE FROM","EXCEPT","FETCH FIRST","FROM","GROUP BY","GO","HAVING","INSERT INTO","INSERT","INTERSECT","LIMIT","MODIFY","ORDER BY","SELECT","SET CURRENT SCHEMA","SET SCHEMA","SET","UNION ALL","UNION","UPDATE","VALUES","WHERE"],EE=["AND","CROSS APPLY","CROSS JOIN","ELSE","INNER JOIN","JOIN","LEFT JOIN","LEFT OUTER JOIN","OR","OUTER APPLY","OUTER JOIN","RIGHT JOIN","RIGHT OUTER JOIN","WHEN","XOR"],eE=function(){function E(e){Object(C["a"])(this,E),this.cfg=e}return Object(i["a"])(E,[{key:"format",value:function(E){return A||(A=new W({reservedWords:q,reservedToplevelWords:z,reservedNewlineWords:EE,stringTypes:['""',"N''","''","``","[]"],openParens:["(","CASE"],closeParens:[")","END"],indexedPlaceholderTypes:["?"],namedPlaceholderTypes:["@",":"],lineCommentTypes:["#","--"]})),new f(this.cfg,A).format(E)}}]),E}(),TE={format:function(E,e){switch(e=e||{},e.language){case"db2":return new Y(e).format(E);case"n1ql":return new K(e).format(E);case"pl/sql":return new b(e).format(E);case"hql":return new $(e).format(E);case"sql":case void 0:return new eE(e).format(E);default:throw Error("Unsupported SQL dialect: ".concat(e.language))}}},RE={data:function(){return{formItem:{textarea:""}}},mounted:function(){this.init()},methods:{init:function(){var E=document.getElementById("language"),e=document.getElementById("input"),T=document.getElementById("output");function R(){window.console.time("formatting"),T.value=TE.format(e.value,{language:E.options[E.selectedIndex].value,params:"hahaha"}),window.console.timeEnd("formatting")}e.addEventListener("input",R),E.addEventListener("change",R),R()}}},NE=RE,tE=(T("2bff"),T("2877")),IE=Object(tE["a"])(NE,L,r,!1,null,null,null),AE=IE.exports,OE={name:"app",components:{SqlFormatter:AE}},SE=OE,nE=(T("034f"),Object(tE["a"])(SE,S,n,!1,null,null,null)),LE=nE.exports,rE=T("e069"),CE=T.n(rE);O["default"].config.productionTip=!1,O["default"].use(CE.a),new O["default"]({render:function(E){return E(LE)}}).$mount("#app")},"78e3":function(E,e,T){},"85ec":function(E,e,T){}});
//# sourceMappingURL=app.f2202a84.js.map